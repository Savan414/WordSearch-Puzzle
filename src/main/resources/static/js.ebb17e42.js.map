{"version":3,"sources":["js/grid.js","js/index.js"],"names":["Grid","constructor","wordSelectMode","selectedItems","firstSelectedItem","gridArea","words","foundWords","getCellsInRange","firstLetter","currentLetter","cellsInRange","x","y","i","push","querySelector","delta","renderGrid","gridSize","wordGrid","document","getElementsByClassName","lastChild","removeChild","tbl","createElement","tblBody","index","row","j","cell","letter","cellText","createTextNode","appendChild","setAttribute","addEventListener","event","target","getAttribute","forEach","classList","remove","add","selectedWord","reduce","word","reversedSelectedWord","split","reverse","join","indexOf","item","submitWordBtn","grid","commaSeperatedWords","value","result","fetchGridInfo","wordListNode","wordListSection","response","fetch","text"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,MAAMA,IAAN,CAAW;AAEdC,EAAAA,WAAW,GAAG;AACV,SAAKC,cAAL,GAAsB,KAAtB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,iBAAL;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACH;;AAKDC,EAAAA,eAAe,CAACC,WAAD,EAAcC,aAAd,EAA6B;AACxC,QAAIC,YAAY,GAAG,EAAnB;;AACA,QAAIF,WAAW,CAACG,CAAZ,GAAgBF,aAAa,CAACE,CAA9B,IAAmCH,WAAW,CAACI,CAAZ,GAAgBH,aAAa,CAACG,CAArE,EAAwE;AACpE,OAACH,aAAD,EAAgBD,WAAhB,IAA+B,CAACA,WAAD,EAAcC,aAAd,CAA/B;AACH;;AACD,QAAID,WAAW,CAACI,CAAZ,KAAkBH,aAAa,CAACG,CAApC,EAAuC;AACnC,WAAK,IAAIC,CAAC,GAAGL,WAAW,CAACG,CAAzB,EAA4BE,CAAC,IAAIJ,aAAa,CAACE,CAA/C,EAAkDE,CAAC,EAAnD,EAAuD;AACnDH,QAAAA,YAAY,CAACI,IAAb,CAAkB,KAAKV,QAAL,CAAcW,aAAd,CAA6B,cAAaF,CAAE,cAAaJ,aAAa,CAACG,CAAE,IAAzE,CAAlB;AACH;AACJ,KAJD,MAIO,IAAIJ,WAAW,CAACG,CAAZ,KAAkBF,aAAa,CAACE,CAApC,EAAuC;AAC1C,WAAK,IAAIE,CAAC,GAAGL,WAAW,CAACI,CAAzB,EAA4BC,CAAC,IAAIJ,aAAa,CAACG,CAA/C,EAAkDC,CAAC,EAAnD,EAAuD;AACnDH,QAAAA,YAAY,CAACI,IAAb,CAAkB,KAAKV,QAAL,CAAcW,aAAd,CAA6B,cAAaN,aAAa,CAACE,CAAE,cAAaE,CAAE,IAAzE,CAAlB;AACH;AACJ,KAJM,MAIA,IAAIJ,aAAa,CAACG,CAAd,GAAkBJ,WAAW,CAACI,CAA9B,KAAoCH,aAAa,CAACE,CAAd,GAAkBH,WAAW,CAACG,CAAtE,EAAyE;AAC5E,UAAIK,KAAK,GAAGP,aAAa,CAACG,CAAd,GAAkBJ,WAAW,CAACI,CAA1C;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIG,KAArB,EAA4BH,CAAC,EAA7B,EAAiC;AAC7BH,QAAAA,YAAY,CAACI,IAAb,CAAkB,KAAKV,QAAL,CAAcW,aAAd,CAA6B,cAAaP,WAAW,CAACG,CAAZ,GAAgBE,CAAE,cAAaL,WAAW,CAACI,CAAZ,GAAgBC,CAAE,IAA3F,CAAlB;AACH;AACJ;;AAED,WAAOH,YAAP;AACH;;AAGDO,EAAAA,UAAU,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC3B,QAAIf,QAAQ,GAAGgB,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,EAA6C,CAA7C,CAAf;;AACA,QAAIjB,QAAQ,CAACkB,SAAb,EAAwB;AACpBlB,MAAAA,QAAQ,CAACmB,WAAT,CAAqBnB,QAAQ,CAACkB,SAA9B;AACH;;AACD,SAAKlB,QAAL,GAAgBA,QAAhB;AACA,QAAIoB,GAAG,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,OAAvB,CAAV;AACA,QAAIC,OAAO,GAAGN,QAAQ,CAACK,aAAT,CAAuB,OAAvB,CAAd;AACA,QAAIE,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,QAApB,EAA8BL,CAAC,EAA/B,EAAmC;AAC/B,UAAIe,GAAG,GAAGR,QAAQ,CAACK,aAAT,CAAuB,IAAvB,CAAV;;AAEA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,QAApB,EAA8BW,CAAC,EAA/B,EAAmC;AAC/B,YAAIC,IAAI,GAAGV,QAAQ,CAACK,aAAT,CAAuB,IAAvB,CAAX;AACA,YAAIM,MAAM,GAAGZ,QAAQ,CAACQ,KAAK,EAAN,CAArB;AACA,YAAIK,QAAQ,GAAGZ,QAAQ,CAACa,cAAT,CAAwBF,MAAxB,CAAf;AACAD,QAAAA,IAAI,CAACI,WAAL,CAAiBF,QAAjB;AACAF,QAAAA,IAAI,CAACK,YAAL,CAAkB,QAAlB,EAA4BtB,CAA5B;AACAiB,QAAAA,IAAI,CAACK,YAAL,CAAkB,QAAlB,EAA4BN,CAA5B;AACAC,QAAAA,IAAI,CAACK,YAAL,CAAkB,aAAlB,EAAiCJ,MAAjC;AACAH,QAAAA,GAAG,CAACM,WAAJ,CAAgBJ,IAAhB;AACH;;AAEDJ,MAAAA,OAAO,CAACQ,WAAR,CAAoBN,GAApB;AACH;;AAEDJ,IAAAA,GAAG,CAACU,WAAJ,CAAgBR,OAAhB;AACAtB,IAAAA,QAAQ,CAAC8B,WAAT,CAAqBV,GAArB,EA3B2B,CA8B3B;;AACAA,IAAAA,GAAG,CAACY,gBAAJ,CAAqB,WAArB,EAAmCC,KAAD,IAAW;AACzC,WAAKpC,cAAL,GAAsB,IAAtB;AACA,YAAM6B,IAAI,GAAGO,KAAK,CAACC,MAAnB;AACA,UAAI3B,CAAC,GAAG,CAACmB,IAAI,CAACS,YAAL,CAAkB,QAAlB,CAAT;AACA,UAAI3B,CAAC,GAAG,CAACkB,IAAI,CAACS,YAAL,CAAkB,QAAlB,CAAT;AACA,UAAIR,MAAM,GAAGD,IAAI,CAACS,YAAL,CAAkB,aAAlB,CAAb;AACA,WAAKpC,iBAAL,GAAyB;AACrBQ,QAAAA,CADqB;AAClBC,QAAAA;AADkB,OAAzB;AAIH,KAVD;AAYAY,IAAAA,GAAG,CAACY,gBAAJ,CAAqB,WAArB,EAAmCC,KAAD,IAAW;AACzC,UAAI,KAAKpC,cAAT,EAAyB;AACrB,cAAM6B,IAAI,GAAGO,KAAK,CAACC,MAAnB;AACA,YAAI3B,CAAC,GAAG,CAACmB,IAAI,CAACS,YAAL,CAAkB,QAAlB,CAAT;AACA,YAAI3B,CAAC,GAAG,CAACkB,IAAI,CAACS,YAAL,CAAkB,QAAlB,CAAT;AACA,YAAIR,MAAM,GAAGD,IAAI,CAACS,YAAL,CAAkB,aAAlB,CAAb;AACA,aAAKrC,aAAL,CAAmBsC,OAAnB,CAA2BV,IAAI,IAAIA,IAAI,CAACW,SAAL,CAAeC,MAAf,CAAsB,UAAtB,CAAnC;AACA,aAAKxC,aAAL,GAAqB,KAAKK,eAAL,CAAqB,KAAKJ,iBAA1B,EAA6C;AAACQ,UAAAA,CAAD;AAAIC,UAAAA;AAAJ,SAA7C,CAArB;AACA,aAAKV,aAAL,CAAmBsC,OAAnB,CAA2BV,IAAI,IAAIA,IAAI,CAACW,SAAL,CAAeE,GAAf,CAAmB,UAAnB,CAAnC;AAGH;AACJ,KAZD;AAcAnB,IAAAA,GAAG,CAACY,gBAAJ,CAAqB,SAArB,EAAiCC,KAAD,IAAW;AACvC,WAAKpC,cAAL,GAAsB,KAAtB;AACA,YAAM2C,YAAY,GAAG,KAAK1C,aAAL,CAAmB2C,MAAnB,CAA0B,CAACC,IAAD,EAAOhB,IAAP,KAAgBgB,IAAI,IAAGhB,IAAI,CAACS,YAAL,CAAkB,aAAlB,CAAjD,EAAmF,EAAnF,CAArB;AACA,YAAMQ,oBAAoB,GAAGH,YAAY,CAACI,KAAb,CAAmB,EAAnB,EAAuBC,OAAvB,GAAiCC,IAAjC,CAAsC,EAAtC,CAA7B;;AACA,UAAI,KAAK7C,KAAL,CAAW8C,OAAX,CAAmBP,YAAnB,MAAqC,CAAC,CAA1C,EAA6C;AACzC,aAAKtC,UAAL,CAAgBQ,IAAhB,CAAqB8B,YAArB;AACH,OAFD,MAEO,IAAI,KAAKvC,KAAL,CAAW8C,OAAX,CAAmBJ,oBAAnB,MAA6C,CAAC,CAAlD,EAAqD;AACxD,aAAKzC,UAAL,CAAgBQ,IAAhB,CAAqBiC,oBAArB;AACH,OAFM,MAEA;AACH,aAAK7C,aAAL,CAAmBsC,OAAnB,CAA2BY,IAAI,IAAIA,IAAI,CAACX,SAAL,CAAeC,MAAf,CAAsB,UAAtB,CAAnC;AACH;;AACD,WAAKxC,aAAL,GAAqB,EAArB;AACH,KAZD;AAaH;;AA5Ga;;;;;;ACAlB;;AAGA,MAAMmD,aAAa,GAAGjC,QAAQ,CAACL,aAAT,CAAuB,cAAvB,CAAtB;AAGAsC,aAAa,CAACjB,gBAAd,CAA+B,OAA/B,EAAwC,YAAY;AAChD,QAAMkB,IAAI,GAAG,IAAIvD,UAAJ,EAAb;AACA,QAAMwD,mBAAmB,GAAGnC,QAAQ,CAACL,aAAT,CAAuB,WAAvB,EAAoCyC,KAAhE;AACA,QAAMtC,QAAQ,GAAGE,QAAQ,CAACL,aAAT,CAAuB,YAAvB,EAAqCyC,KAAtD;AACA,MAAIC,MAAM,GAAG,MAAMC,aAAa,CAACxC,QAAD,EAAWqC,mBAAX,CAAhC;AACAD,EAAAA,IAAI,CAACjD,KAAL,GAAakD,mBAAmB,CAACP,KAApB,CAA0B,GAA1B,CAAb;AACAM,EAAAA,IAAI,CAACrC,UAAL,CAAgBC,QAAhB,EAA0BuC,MAA1B;AACA,MAAIE,YAAY,GAAGvC,QAAQ,CAACa,cAAT,CAAwBqB,IAAI,CAACjD,KAA7B,CAAnB;AACA,MAAIuD,eAAe,GAAGxC,QAAQ,CAACL,aAAT,CAAuB,YAAvB,CAAtB;;AACA,MAAI6C,eAAe,CAACtC,SAApB,EAA+B;AAC3BsC,IAAAA,eAAe,CAACrC,WAAhB,CAA4BqC,eAAe,CAACtC,SAA5C;AACH;;AACDsC,EAAAA,eAAe,CAAC1B,WAAhB,CAA4ByB,YAA5B;AAEH,CAdD;;AAgBA,eAAeD,aAAf,CAA6BxC,QAA7B,EAAuCqC,mBAAvC,EAA4D;AAExD,MAAIM,QAAQ,GAAG,MAAMC,KAAK,CAAE,uBAAsB5C,QAAS,aAAYqC,mBAAoB,EAAjE,CAA1B;AACA,MAAIE,MAAM,GAAG,MAAMI,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAON,MAAM,CAACT,KAAP,CAAa,GAAb,CAAP;AACH","file":"js.ebb17e42.js","sourceRoot":"..\\src","sourcesContent":["export class Grid {\r\n\r\n    constructor() {\r\n        this.wordSelectMode = false;\r\n        this.selectedItems = [];\r\n        this.firstSelectedItem;\r\n        this.gridArea = null;\r\n        this.words = [];\r\n        this.foundWords = [];\r\n    }\r\n\r\n\r\n\r\n    \r\n    getCellsInRange(firstLetter, currentLetter) {\r\n        let cellsInRange = [];\r\n        if (firstLetter.x > currentLetter.x || firstLetter.y > currentLetter.y) {\r\n            [currentLetter, firstLetter] = [firstLetter, currentLetter];\r\n        }\r\n        if (firstLetter.y === currentLetter.y) {\r\n            for (let i = firstLetter.x; i <= currentLetter.x; i++) {\r\n                cellsInRange.push(this.gridArea.querySelector(`td[data-x=\"${i}\"][data-y=\"${currentLetter.y}\"]`));\r\n            }\r\n        } else if (firstLetter.x === currentLetter.x) {\r\n            for (let i = firstLetter.y; i <= currentLetter.y; i++) {\r\n                cellsInRange.push(this.gridArea.querySelector(`td[data-x=\"${currentLetter.x}\"][data-y=\"${i}\"]`));\r\n            }\r\n        } else if (currentLetter.y - firstLetter.y === currentLetter.x - firstLetter.x) {\r\n            let delta = currentLetter.y - firstLetter.y;\r\n            for (let i = 0; i <= delta; i++) {\r\n                cellsInRange.push(this.gridArea.querySelector(`td[data-x=\"${firstLetter.x + i}\"][data-y=\"${firstLetter.y + i}\"]`));\r\n            }\r\n        }\r\n        \r\n        return cellsInRange;\r\n    }\r\n\r\n\r\n    renderGrid(gridSize, wordGrid) {\r\n        var gridArea = document.getElementsByClassName(\"grid-area\")[0];\r\n        if (gridArea.lastChild) {\r\n            gridArea.removeChild(gridArea.lastChild);\r\n        }\r\n        this.gridArea = gridArea;\r\n        var tbl = document.createElement(\"table\");\r\n        var tblBody = document.createElement(\"tbody\");\r\n        let index = 0;\r\n        for (var i = 0; i < gridSize; i++) {\r\n            var row = document.createElement(\"tr\");\r\n\r\n            for (var j = 0; j < gridSize; j++) {\r\n                var cell = document.createElement(\"td\");\r\n                let letter = wordGrid[index++];\r\n                var cellText = document.createTextNode(letter);\r\n                cell.appendChild(cellText);\r\n                cell.setAttribute(\"data-x\", i);\r\n                cell.setAttribute(\"data-y\", j);\r\n                cell.setAttribute(\"data-letter\", letter);\r\n                row.appendChild(cell);\r\n            }\r\n\r\n            tblBody.appendChild(row);\r\n        }\r\n\r\n        tbl.appendChild(tblBody);\r\n        gridArea.appendChild(tbl);\r\n\r\n\r\n        // Click Handlers\r\n        tbl.addEventListener(\"mousedown\", (event) => {\r\n            this.wordSelectMode = true;\r\n            const cell = event.target;\r\n            let x = +cell.getAttribute(\"data-x\");\r\n            let y = +cell.getAttribute(\"data-y\");\r\n            let letter = cell.getAttribute(\"data-letter\");\r\n            this.firstSelectedItem = {\r\n                x, y\r\n            };\r\n            \r\n        });\r\n\r\n        tbl.addEventListener(\"mousemove\", (event) => {\r\n            if (this.wordSelectMode) {\r\n                const cell = event.target;\r\n                let x = +cell.getAttribute(\"data-x\");\r\n                let y = +cell.getAttribute(\"data-y\");\r\n                let letter = cell.getAttribute(\"data-letter\");\r\n                this.selectedItems.forEach(cell => cell.classList.remove(\"selected\"));\r\n                this.selectedItems = this.getCellsInRange(this.firstSelectedItem, {x, y});\r\n                this.selectedItems.forEach(cell => cell.classList.add(\"selected\"));\r\n\r\n\r\n            }\r\n        });\r\n\r\n        tbl.addEventListener(\"mouseup\", (event) => {\r\n            this.wordSelectMode = false;\r\n            const selectedWord = this.selectedItems.reduce((word, cell) => word +=cell.getAttribute(\"data-letter\"), '');\r\n            const reversedSelectedWord = selectedWord.split(\"\").reverse().join(\"\");\r\n            if (this.words.indexOf(selectedWord) !== -1) {\r\n                this.foundWords.push(selectedWord);\r\n            } else if (this.words.indexOf(reversedSelectedWord) !== -1) {\r\n                this.foundWords.push(reversedSelectedWord);\r\n            } else {\r\n                this.selectedItems.forEach(item => item.classList.remove(\"selected\"));\r\n            }\r\n            this.selectedItems = [];\r\n        });\r\n    }\r\n}","import { Grid } from \"./grid\";\r\n\r\n\r\nconst submitWordBtn = document.querySelector(\".submit-word\");\r\n\r\n\r\nsubmitWordBtn.addEventListener(\"click\", async () => {\r\n    const grid = new Grid();\r\n    const commaSeperatedWords = document.querySelector(\"#add-word\").value;\r\n    const gridSize = document.querySelector(\"#grid-size\").value;\r\n    let result = await fetchGridInfo(gridSize, commaSeperatedWords);\r\n    grid.words = commaSeperatedWords.split(\",\");\r\n    grid.renderGrid(gridSize, result);\r\n    let wordListNode = document.createTextNode(grid.words);\r\n    let wordListSection = document.querySelector(\".word-list\");\r\n    if (wordListSection.lastChild) {\r\n        wordListSection.removeChild(wordListSection.lastChild);\r\n    }\r\n    wordListSection.appendChild(wordListNode);\r\n   \r\n});\r\n\r\nasync function fetchGridInfo(gridSize, commaSeperatedWords) {\r\n\r\n    let response = await fetch(`./wordgrid?gridSize=${gridSize}&wordList=${commaSeperatedWords}`);\r\n    let result = await response.text();\r\n    return result.split(\" \");\r\n}\r\n"]}